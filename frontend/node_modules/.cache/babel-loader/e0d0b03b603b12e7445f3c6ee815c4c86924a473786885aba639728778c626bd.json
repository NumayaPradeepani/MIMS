{"ast":null,"code":"function SignupValidation(values) {\n  let errors = {};\n  const email_pattern = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n  const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\n  const phone_pattern = /^[0-9]{10}$/;\n  if (!values.phone) {\n    errors.phone = \"Phone Number is required\";\n  } else if (!phone_pattern.test(values.phone)) {\n    errors.phone = \"Phone Number is invalid\";\n  } else {\n    errors.phone = \"\";\n  }\n  if (!values.name) {\n    errors.name = \"Name is required\";\n  } else {\n    errors.name = \"\";\n  }\n  if (!values.email) {\n    errors.email = \"Email address is required\";\n  } else if (!email_pattern.test(values.email)) {\n    errors.email = \"Email address is invalid\";\n  } else {\n    errors.email = \"\";\n  }\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  } else if (!password_pattern.test(values.password)) {\n    errors.password = \"Password is invalid\";\n  } else {\n    errors.password = \"\";\n  }\n  return errors;\n}\n_c = SignupValidation;\nexport default SignupValidation;\nvar _c;\n$RefreshReg$(_c, \"SignupValidation\");","map":{"version":3,"names":["SignupValidation","values","errors","email_pattern","password_pattern","phone_pattern","phone","test","name","email","password","_c","$RefreshReg$"],"sources":["C:/Users/NUMAYA/Desktop/Test/Interview/frontend/src/SignupValidation.js"],"sourcesContent":["function SignupValidation (values) {\r\n\r\n    let errors = {};\r\n    const email_pattern = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n    const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/\r\n    const phone_pattern = /^[0-9]{10}$/\r\n\r\n    if (!values.phone) {\r\n        errors.phone = \"Phone Number is required\";\r\n        }\r\n    else if (!phone_pattern.test(values.phone)) {\r\n        errors.phone = \"Phone Number is invalid\";\r\n    }else{\r\n        errors.phone = \"\"\r\n        }\r\n        \r\n    if (!values.name) {\r\n        errors.name = \"Name is required\";\r\n        }\r\n    else{\r\n        errors.name = \"\"\r\n    }\r\n\r\n    \r\n    if (!values.email) {\r\n      errors.email = \"Email address is required\";\r\n    }\r\n    else if (!email_pattern.test(values.email)) {\r\n      errors.email = \"Email address is invalid\";\r\n    }else{\r\n      errors.email = \"\"\r\n    }\r\n    \r\n  \r\n    if (!values.password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    else if (!password_pattern.test(values.password)) {\r\n      errors.password = \"Password is invalid\";\r\n    }else{\r\n      errors.password = \"\"\r\n    }\r\n  \r\n      return errors;\r\n  \r\n  }\r\n  \r\n  export default SignupValidation"],"mappings":"AAAA,SAASA,gBAAgBA,CAAEC,MAAM,EAAE;EAE/B,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,MAAMC,aAAa,GAAG,wCAAwC;EAC9D,MAAMC,gBAAgB,GAAG,6DAA6D;EACtF,MAAMC,aAAa,GAAG,aAAa;EAEnC,IAAI,CAACJ,MAAM,CAACK,KAAK,EAAE;IACfJ,MAAM,CAACI,KAAK,GAAG,0BAA0B;EACzC,CAAC,MACA,IAAI,CAACD,aAAa,CAACE,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAE;IACxCJ,MAAM,CAACI,KAAK,GAAG,yBAAyB;EAC5C,CAAC,MAAI;IACDJ,MAAM,CAACI,KAAK,GAAG,EAAE;EACjB;EAEJ,IAAI,CAACL,MAAM,CAACO,IAAI,EAAE;IACdN,MAAM,CAACM,IAAI,GAAG,kBAAkB;EAChC,CAAC,MACD;IACAN,MAAM,CAACM,IAAI,GAAG,EAAE;EACpB;EAGA,IAAI,CAACP,MAAM,CAACQ,KAAK,EAAE;IACjBP,MAAM,CAACO,KAAK,GAAG,2BAA2B;EAC5C,CAAC,MACI,IAAI,CAACN,aAAa,CAACI,IAAI,CAACN,MAAM,CAACQ,KAAK,CAAC,EAAE;IAC1CP,MAAM,CAACO,KAAK,GAAG,0BAA0B;EAC3C,CAAC,MAAI;IACHP,MAAM,CAACO,KAAK,GAAG,EAAE;EACnB;EAGA,IAAI,CAACR,MAAM,CAACS,QAAQ,EAAE;IACpBR,MAAM,CAACQ,QAAQ,GAAG,sBAAsB;EAC1C,CAAC,MACI,IAAI,CAACN,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACS,QAAQ,CAAC,EAAE;IAChDR,MAAM,CAACQ,QAAQ,GAAG,qBAAqB;EACzC,CAAC,MAAI;IACHR,MAAM,CAACQ,QAAQ,GAAG,EAAE;EACtB;EAEE,OAAOR,MAAM;AAEjB;AAACS,EAAA,GA7CMX,gBAAgB;AA+CvB,eAAeA,gBAAgB;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}